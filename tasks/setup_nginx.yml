---

- name: add nginx key
  become: true
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    state: present
  when: ansible_distribution == 'Debian'

- name: add additional debian repos
  become: true
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - 'deb http://nginx.org/packages/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx'
    - 'deb-src http://nginx.org/packages/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx'
  when: ansible_distribution == 'Debian'

- name: apt dist-upgrade
  become: true
  apt:
    upgrade: dist
    autoremove: true
  when: ansible_distribution == 'Debian'

- name: install additional packages
  become: true
  apt:
    name:
    - nginx
    - python-pip
    - python-netaddr
    autoremove: true
    allow_unauthenticated: true
    state: latest
  when: ansible_distribution == 'Debian'

- name: Install nginx Webserver
  become: true
  package:
    name: "{{ install_nginx_python3_pip }}"
    state: present
 
- name: Open Firewalld ports 22/80/443
  become: true
  firewalld:
    service: "{{ item }}"
    permanent: true
    state: enabled
  with_items:
    - http
    - https
    - ssh
  when: ansible_os_family == 'RedHat'

- name: stop and enable nginx
  become: yes
  systemd:
    name:    nginx
    state:   stopped
    enabled: true

- name: create some folders
  become: true
  file:
    name: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - { path: '{{ nc_datadir }}',        owner: '{{ web_user[ansible_distribution] }}', group: '{{ web_group[ansible_distribution] }}', mode: '0750' }
    - { path: '/var/www',                owner: '{{ web_user[ansible_distribution] }}', group: '{{ web_group[ansible_distribution] }}', mode: '0750' }
    - { path: '/var/www/letsencrypt',    owner: '{{ web_user[ansible_distribution] }}', group: '{{ web_group[ansible_distribution] }}', mode: '0750' }
    - { path: '/upload_tmp',             owner: '{{ web_user[ansible_distribution] }}', group: '{{ web_group[ansible_distribution] }}', mode: '0755' }

- name: install pip netaddress
  become: true
  pip:
    name: netaddr
    state: latest
    executable: pip3
  when: false

- name: set netmask
  set_fact:
    net_mask: "{{ ansible_default_ipv4.network }}/{{ ansible_default_ipv4.netmask }}"

- name: bring /etc/nginx/nginx.conf in place
  become: yes
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

- name: use ec2 public hostname if fqdn is not defined
  set_fact:
    fqdn: "{{ fqdn if ( fqdn ) else facter_ec2_metadata['public-hostname'] }}"
  when: facter_ec2_metadata is defined

- name: use ansible_fqdn if fqdn is not defined
  set_fact:
    fqdn: "{{ fqdn if ( fqdn ) else ansible_fqdn }}"

- name: nextcloud nginx config
  become: true
  template:
    src: nextcloud.conf.j2
    dest: /etc/nginx/conf.d/nextcloud.conf
    force: no
  notify: restart nginx

- name: nginx config for ssl
  become: true
  template:
    src: ssl.conf.{{ ssl_certificate_type }}.j2
    dest: /etc/nginx/conf.d/ssl.conf
  notify: restart nginx

- name: copy some nginx config file
  become: true
  copy:
    src: "{{ item }}"
    dest: "/etc/nginx/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - header.conf
    - optimization.conf
    - php_optimization.conf
    - proxy.conf
  notify: restart nginx

- name: copy letencrypt.conf
  become: true
  copy:
    src: letsencrypt.conf
    dest: /etc/nginx/conf.d/letsencrypt.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

